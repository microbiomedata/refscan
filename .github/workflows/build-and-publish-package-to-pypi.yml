# GitHub Actions workflow that builds and publishes a Python package to PyPI.
name: Build and publish package to PyPI

on:
  release:
    types: [ published ]

# Note: Since the building and publishing are done in separate jobs,
#       we use GitHub's artifact persistence system to give the later
#       job access to files generated by the earlier job.
jobs:
  # Use existing workflows to check source code formta and run tests.
  # Reference: https://docs.github.com/en/actions/using-workflows/reusing-workflows#calling-a-reusable-workflow
  check-source-code-format:
    name: Check source code format
    uses: ./.github/workflows/check-source-code-format.yml
  run-tests:
    name: Run tests
    uses: ./.github/workflows/run-tests.yml
  build:
    name: Build package
    # This job depends upon other jobs succeeding.
    # Reference: https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#jobsjob_idneeds
    needs:
      - check-source-code-format
      - run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out commit  # Docs: https://github.com/actions/checkout
        uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          # Note: Caching (of the packages that `uv` builds while resolving dependencies) is "enabled by default on GitHub-hosted runners."
          #       Reference: https://github.com/astral-sh/setup-uv/blob/main/README.md#enable-caching
          #       Here, we make it so the cache gets invalidated whenever the `uv.lock` file changes.
          #       Reference: https://github.com/astral-sh/setup-uv/blob/main/README.md#cache-dependency-glob
          cache-dependency-glob: "uv.lock"
      - name: Update package version  # Docs: https://docs.astral.sh/uv/reference/cli/#uv-version
        run: uv version ${{ github.event.release.tag_name }}
      - name: Build package  # Docs: https://docs.astral.sh/uv/reference/cli/#uv-build
        run: uv build
      - name: Save the built package for publishing later  # Docs: https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: built-package
          path: dist
          if-no-files-found: error
          retention-days: 1  # Note: 1 day is the shortest period possible

  # Note: This job is separate from the others so that this job's permissions are not
  #       unnecessarily granted to the other jobs.
  publish:
    name: Publish package
    needs: [ build ]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/refscan
    permissions:
      # Note: According to the documentation of the `pypa/gh-action-pypi-publish` Action,
      #       the `id-token: write` permission is mandatory for trusted publishing to PyPI.
      #       Reference: https://github.com/pypa/gh-action-pypi-publish
      #       Reference: https://docs.pypi.org/trusted-publishers/
      id-token: write
    steps:
      - name: Load the built package for publishing  # Docs: https://github.com/actions/download-artifact
        uses: actions/download-artifact@v4
        with:
          name: built-package
          path: dist
      - name: List contents of `dist` directory
        run: ls -lh dist
      - name: Publish package to PyPI  # Docs: https://github.com/pypa/gh-action-pypi-publish
        uses: pypa/gh-action-pypi-publish@release/v1
